//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.573.
// 
using System.Diagnostics;
using System.Xml.Serialization;
using System;
using System.Web.Services.Protocols;
using System.ComponentModel;
using System.Web.Services;

namespace Droid_weather
{

    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "ndfdXMLBinding", Namespace = "http://weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl")]
    public class ndfdXML : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        /// <remarks/>
        public ndfdXML()
        {
            this.Url = "http://weather.gov/forecasts/xml/SOAP_server/ndfdXMLserver.php";
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl#NDFDgen", RequestNamespace = "http://weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl", ResponseNamespace = "http://weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("dwmlOut")]
        public string NDFDgen(System.Decimal latitude, System.Decimal longitude, productType product, System.DateTime startTime, System.DateTime endTime, weatherParametersType weatherParameters)
        {
            object[] results = this.Invoke("NDFDgen", new object[] {
                    latitude,
                    longitude,
                    product,
                    startTime,
                    endTime,
                    weatherParameters});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginNDFDgen(System.Decimal latitude, System.Decimal longitude, productType product, System.DateTime startTime, System.DateTime endTime, weatherParametersType weatherParameters, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("NDFDgen", new object[] {
                    latitude,
                    longitude,
                    product,
                    startTime,
                    endTime,
                    weatherParameters}, callback, asyncState);
        }

        /// <remarks/>
        public string EndNDFDgen(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl#NDFDgenByDay", RequestNamespace = "http://weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl", ResponseNamespace = "http://weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("dwmlByDayOut")]
        public string NDFDgenByDay(System.Decimal latitude, System.Decimal longitude, [System.Xml.Serialization.SoapElementAttribute(DataType = "date")] System.DateTime startDate, [System.Xml.Serialization.SoapElementAttribute(DataType = "integer")] string numDays, formatType format)
        {
            object[] results = this.Invoke("NDFDgenByDay", new object[] {
                    latitude,
                    longitude,
                    startDate,
                    numDays,
                    format});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginNDFDgenByDay(System.Decimal latitude, System.Decimal longitude, System.DateTime startDate, string numDays, formatType format, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("NDFDgenByDay", new object[] {
                    latitude,
                    longitude,
                    startDate,
                    numDays,
                    format}, callback, asyncState);
        }

        /// <remarks/>
        public string EndNDFDgenByDay(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("productType", "http://weather.gov/forecasts/xml/DWMLgen/schema/ndfdXML.xsd")]
    public enum productType
    {

        /// <remarks/>
        [System.Xml.Serialization.SoapEnumAttribute("time-series")]
        timeseries,

        /// <remarks/>
        glance,
    }

    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("weatherParametersType", "http://weather.gov/forecasts/xml/DWMLgen/schema/ndfdXML.xsd")]
    public class weatherParametersType
    {

        /// <remarks/>
        public bool maxt;

        /// <remarks/>
        public bool mint;

        /// <remarks/>
        public bool temp;

        /// <remarks/>
        public bool dew;

        /// <remarks/>
        public bool pop12;

        /// <remarks/>
        public bool qpf;

        /// <remarks/>
        public bool sky;

        /// <remarks/>
        public bool snow;

        /// <remarks/>
        public bool wspd;

        /// <remarks/>
        public bool wdir;

        /// <remarks/>
        public bool wx;

        /// <remarks/>
        public bool waveh;

        /// <remarks/>
        public bool icons;
    }

    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("formatType", "http://weather.gov/forecasts/xml/DWMLgen/schema/ndfdXML.xsd")]
    public enum formatType
    {

        /// <remarks/>
        [System.Xml.Serialization.SoapEnumAttribute("24 hourly")]
        Item24hourly,

        /// <remarks/>
        [System.Xml.Serialization.SoapEnumAttribute("12 hourly")]
        Item12hourly,
    }
}